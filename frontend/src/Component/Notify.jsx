import React, { useEffect } from "react";
import { links, vapidKeys } from "../links";

export default function Notify() {
  //web push
  function requestNotificationPermission() {
    Notification.requestPermission().then((permission) => {
      if (permission === "granted") {
        console.log("Notification permission granted.");
        subscribeUserToPush(); // Proceed to subscription
      } else {
        console.log("Notification permission denied.");
      }
    });
  }
  function subscribeUserToPush() {
    navigator.serviceWorker.ready.then((registration) => {
      registration.pushManager.getSubscription().then((existed) => {
        if (existed) {
          alert("Already Subscribed");
        } else {
          const publicKey = vapidKeys.publicKey; // generated by web-push once and then stored

          registration.pushManager
            .subscribe({
              userVisibleOnly: true, // Ensures notifications are always visible to the user
              applicationServerKey: urlBase64ToUint8Array(publicKey), // Converts the public key
            })
            .then(async (subscription) => {
              console.log("User subscribed:", subscription);
              const options = {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({ subscription }),
              };
              const response = await fetch(links.subscribe, options);
              const result = await response.json();
              console.log(result);

              if (result.success === false) {
                alert(result.msg);
              }

              // Send this subscription object to your server for later use
            })
            .catch((error) => {
              console.error("User subscription failed:", error);
            });
        }
      });
    });
  }
  // this is needed as browser understands unsigned 8-bit integer array instead of base64url string which is vapid key
  function urlBase64ToUint8Array(base64String) {
    const padding = "=".repeat((4 - (base64String.length % 4)) % 4);
    const base64 = (base64String + padding)
      .replace(/-/g, "+")
      .replace(/_/g, "/");

    const rawData = window.atob(base64);
    return Uint8Array.from([...rawData].map((char) => char.charCodeAt(0)));
  }
  useEffect(() => {
    requestNotificationPermission();
  }, []);
  return <div>A page for admin to get notifications by web push</div>;
}
